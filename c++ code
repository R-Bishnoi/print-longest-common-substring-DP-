/*************print longest common substring ******************/

class Solution{   
public:


    string longestPalindrome(string s1){
        
        int n=s1.size();
        string s2=s1;
        reverse(s2.begin(),s2.end());
        
    vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
    
    //dummy row
    for(int i=0;i<=n;i++)dp[i][0]=0;
    //dummy colomn
    for(int j=0;j<=n;j++)dp[0][j]=0;
        
   
   
   
   int a=0,b=0;
   int ans=0;
 for(int i=1;i<=n;i++){
     for(int j=1;j<=n;j++){
         
         if(s1[i-1]==s2[j-1]){
             dp[i][j]=1+dp[i-1][j-1];
             if(dp[i][j]>ans){
                 ans=dp[i][j];
                 a=i;
                 b=j;
             }
             
         }
         
         else dp[i][j]=0;
     }
 }
 
 string res="";

int i=a,j=b;
while(ans>0){
    
   if(s1[i-1]==s2[j-1]){
     res+=s1[i-1];  
   } 
    
    
        i--;
        j--;
    ans--;
    
}
 
reverse(res.begin(),res.end());

return res;
 
    }

};
